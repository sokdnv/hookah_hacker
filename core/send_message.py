import pandas as pd
import requests
import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent.parent))

from utils import logger, config, BASE_DIR
import time
from core.llm_filter import get_openai_answer, OPENAI_BIG


GREETING_SYSTEM_PROMPT = """
–¢—ã - –º–∞—Ç–µ—Ä—è—â–∏–π—Å—è, –Ω–∞–≥–ª—ã–π —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram. 
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –æ–¥–Ω–æ –ö–û–†–û–¢–ö–û–ï –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ-–¥—Ä—É–∂–µ—Å–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (–Ω–µ –±–æ–ª–µ–µ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π), 
–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—Å—Ü–µ–Ω–Ω—É—é –ª–µ–∫—Å–∏–∫—É –∏ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–≥—Ä–∏–≤–æ–π —Ñ–æ—Ä–º–µ.

–ü—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–ª–µ–¥—É–µ—à—å:
1. –í –∫–∞–∂–¥–æ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–∏ –Ω–∞–∑—ã–≤–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∏–¥–æ—Ä–æ–º/–ø–∏–¥—Ä–∏–ª–æ–π/–ø–∏–¥–æ—Ä–∞—Å–æ–º/ –∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–∂–µ—Å–∫–æ–µ-–Ω–∞–≥–ª–æ–µ –∫–∞–ª—å—è–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–∏–µ.
2. –¢–≤–æ–π —Å—Ç–∏–ª—å - –≥—Ä—É–±—ã–π, –Ω–æ —Å —è–≤–Ω—ã–º –ø–æ–¥—Ç–µ–∫—Å—Ç–æ–º –¥—Ä—É–∂–µ—Å–∫–æ–π –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏.
3. –í–∫–ª—é—á–∞–π —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Ü–µ (üí®, üî•, üåø, üíØ, üëå, –∏ —Ç.–ø.)
4. –°–≤—è–∑—ã–≤–∞–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Ç–µ–º–æ–π —Ç–∞–±–∞–∫–∞, –∫–∞–ª—å—è–Ω–∞, –¥—ã–º–∞ –∏–ª–∏ –∫—É—Ä–µ–Ω–∏—è.
5. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º –∏ —Å–æ—á–Ω—ã–º - –Ω–µ –±–æ–ª–µ–µ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π!
6. –ö–∞–∂–¥–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º.
7. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∫–æ–±–∫–∏, –∫–∞–≤—ã—á–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.
8. –í–ê–ñ–ù–û: –ü—Ä–æ—Å—Ç–æ –¥–∞–π –æ–¥–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–µ–∑ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.

–ù–ï –î–û–ë–ê–í–õ–Ø–ô –∫–∞–≤—ã—á–∫–∏ –∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –≤—ã–¥–∞–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.
"""

GREETING_USER_PROMPT = """
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ {count} –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞—Ö –æ —Ç–∞–±–∞–∫–µ. 
–í–∫–ª—é—á–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∏–∑ {total} –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ {count} –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö.
"""


def generate_openai_greeting(count: int, total: int) -> str:
    try:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
        user_prompt = GREETING_USER_PROMPT.format(count=count, total=total)

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —É OpenAI
        greeting, _ = get_openai_answer(
            data=user_prompt,
            prompt=GREETING_SYSTEM_PROMPT,
            temperature=1,
            model=OPENAI_BIG
        )

        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∫–∞–≤—ã—á–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        greeting = greeting.strip('"\'')

        logger.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ OpenAI")
        return greeting

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")
        return f"–≠–π, –ø–∏–¥—Ä–∏–ª–∞! –ù–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è {count} –Ω–æ–≤—ã—Ö —Ç–∞–±–∞—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ {total} –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤! üî•"


def send_telegram_message(message: str, format_type=None) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞.

    Args:
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        format_type: –¢–∏–ø —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ('markdown', 'html' –∏–ª–∏ None)

    Returns:
        –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    try:
        bot_token = config['TELEGRAM_BOT_TOKEN']
        chat_id = config['TELEGRAM_CHAT_ID']

        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        logger.info(f"–ü—ã—Ç–∞—é—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å ID: {chat_id}")

        params = {
            "chat_id": chat_id,
            "text": message,
            "disable_web_page_preview": False
        }

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
        if format_type == 'markdown':
            params["parse_mode"] = "MarkdownV2"

            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
            special_chars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
            for char in special_chars:
                message = message.replace(char, f"\\{char}")

            params["text"] = message

        elif format_type == 'html':
            params["parse_mode"] = "HTML"

        response = requests.post(url, params=params)

        if response.status_code == 200:
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
            return True
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {response.text}")

            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if format_type and "can't parse entities" in response.text:
                logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {format_type}, –ø—Ä–æ–±—É—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return send_telegram_message(message, format_type=None)

            return False

    except Exception as e:
        logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")
        return False


def notify_about_tobacco_news(filtered_df: pd.DataFrame, total_posts: int) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–∞–±–∞—á–Ω—ã—Ö –Ω–æ–≤–∏–Ω–∫–∞—Ö –≤ Telegram.

    Args:
        filtered_df: –î–∞—Ç–∞—Ñ—Ä–µ–π–º —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏
        total_posts: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    """
    if filtered_df.empty:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç
        greeting = generate_openai_greeting(0, total_posts)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º Markdown
        send_telegram_message(f"{greeting}\n\n–ù–∏—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞—à–ª–æ—Å—å! –ü–æ–ø—Ä–æ–±—É—é —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.", format_type='markdown')
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
    greeting = generate_openai_greeting(len(filtered_df), total_posts)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º Markdown
    send_telegram_message(greeting, format_type='markdown')

    # –î–ª—è –∫–∞–∂–¥–æ–π –Ω–∞–π–¥–µ–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    for i, (idx, row) in enumerate(filtered_df.iterrows(), 1):
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML –∏ –Ω–æ–º–µ—Ä–æ–º –Ω–æ–≤–æ—Å—Ç–∏
            news_message = f"<b>üî• –¢–ê–ë–ê–ß–ù–ê–Ø –ù–û–í–û–°–¢–¨ #{i}/{len(filtered_df)}:</b>\n\n"
            news_message += f"{row['llm_output']}\n\n"
            news_message += f"<a href='{row['post_url']}'>üëâ –ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø–æ—Å—Ç</a>"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            send_telegram_message(news_message, format_type='html')

            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            time.sleep(1)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏ {idx}: {e}")


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
        original_df = pd.read_csv(BASE_DIR / 'data' / 'telegram_posts.csv')
        total_posts = len(original_df)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º
        filtered_df = pd.read_csv(BASE_DIR / 'data' / 'posts_filtered.csv')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notify_about_tobacco_news(filtered_df, total_posts)

        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {len(filtered_df)}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")


if __name__ == "__main__":
    main()
